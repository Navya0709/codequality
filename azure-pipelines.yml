#Testing about CI


trigger:
- main

pool:
  vmImage: 'windows-latest'

steps:

- task: DotNetCoreCLI@2
  displayName: BUILD
  inputs:
    command: 'build'
    projects: '**/*.csproj'




    
- task: DotNetCoreCLI@2
  displayName: PUBLISH
  inputs:
    command: 'publish'
    publishWebProjects: false
    projects: '**/CodeScanning.Server.csproj'
    arguments: '--configuration release --output $(Build.ArtifactStagingDirectory) '
    

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'dll_file'
    publishLocation: 'Container'

- task: ExtractFiles@1
  inputs:
    archiveFilePatterns: '$(Build.ArtifactStagingDirectory)/*.zip'  # Specify the path to the zip file
    destinationFolder: '$(Build.ArtifactStagingDirectory)/extracted'  # Specify the folder where you want to extract the files

- task: PowerShell@2
  displayName: GET 
  inputs: 
    targetType: inline
    script: |
        $uri = "https://codescanning.azurewebsites.net/Backend/get-code"
        $response = Invoke-RestMethod -Uri $uri -Method Get
        echo $response

- task: PowerShell@2
  displayName: POST 1
  inputs: 
    targetType: inline
    script: |
        $uri = "https://codescanning.azurewebsites.net/Backend/process-code"
        $body = @{ "code" = "navya" } | ConvertTo-Json
        $response = Invoke-RestMethod -Uri $uri -Method Post -Body $body -ContentType "application/json"
        echo $response

- task: PowerShell@2
  displayName: POST 2
  inputs: 
    targetType: inline
    script: |
        $uri = "https://codescanning.azurewebsites.net/Backend/process-code"
        $body = @{ "code" = "public class Program{}" } | ConvertTo-Json
        $response = Invoke-RestMethod -Uri $uri -Method Post -Body $body -ContentType "application/json"
        echo $response
